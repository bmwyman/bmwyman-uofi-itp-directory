@page "/office/hours/{officeid:int?}"

<PageTitle>Office Hours | UIUC</PageTitle>

<il-section>
    <h1>@OfficeTitle Hours</h1>
    <p>Edit your office hours below. If you leave either the opening or closing time blank, it will not display the day of the week. Use the format "8:00 AM".</p>
</il-section>
@if (!OfficeId.HasValue)
{
    <MultiChoice @ref="_multiChoice" Type="MultiChoiceTypeEnum.Office" AreaOfficeThinObjects="_officeThinObjects" OnClickCallback="AssignId"></MultiChoice>
}
else if (OfficeHours != null)
{
    foreach (var officeHour in OfficeHours)
    {
        <div class="iled-hours-parent">
           <h2>@officeHour.Day</h2>
            <div class="iled-hours-time">
                <label for="ed-date-from-@officeHour.DayNumeric" class="iled-sr-only">From </label>
                <input id="ed-date-from-@officeHour.DayNumeric" type="time" @bind="@officeHour.Start">
                <label for="ed-date-to-@officeHour.DayNumeric">to </label>
                <input id="ed-date-to-@officeHour.DayNumeric" type="time" @bind="@officeHour.End">
            </div>
            <div class="iled-hours-location" hidden="@officeHour.HideNotes">
                <input id="ed-date-location-office-@officeHour.DayNumeric" type="radio" checked="@(officeHour.NotesEnum == LocationTypeEnum.Office)"
                       name="ed-date-location-@officeHour.DayNumeric" @onchange="@(() => officeHour.SetNotes(LocationTypeEnum.Office))" />
                <label for="ed-date-location-office-@officeHour.DayNumeric">In Office</label>
                <input type="radio" id="ed-date-location-remote-@officeHour.DayNumeric" checked="@(officeHour.NotesEnum == LocationTypeEnum.Remote)"
                       name="ed-date-location-@officeHour.DayNumeric" @onchange="@(() => officeHour.SetNotes(LocationTypeEnum.Remote))" />
                <label for="ed-date-location-remote-@officeHour.DayNumeric">Remote</label>
                <input type="radio" id="ed-date-location-other-@officeHour.DayNumeric" checked="@(officeHour.NotesEnum == LocationTypeEnum.Other)"
                       name="ed-date-location-@officeHour.DayNumeric" @onchange="@(() => officeHour.SetNotes(LocationTypeEnum.Other))" />
                <label for="ed-date-location-other-@officeHour.DayNumeric">Other</label>

                <label for="ed-date-notes-@officeHour.DayNumeric" class="iled-sr-only">Other Notes</label>
                <input id="ed-date-notes-@officeHour.DayNumeric" type="text" @bind="@officeHour.Notes" hidden="@(officeHour.NotesEnum != LocationTypeEnum.Other)">

            </div>
        </div>
    }
    <div class="iled-input-box-parent">
        <div class="iled-input-box">
            <label for="ed-holiday">Add the text "Closed for University Holidays" to the office hours.</label>
            <input id="ed-holiday" type="checkbox" @bind="Office.HoursIncludeHolidayMessage">
        </div>
    </div>

    <div class="iled-input-box-parent">
        Preview: <strong>@Office.OfficeHourText</strong>
    </div>

    <div class="iled-buttons-left">
        <button class="il-button" @onclick="Generate" @onblur="RemoveMessage">Save</button>
    <ClearCacheButton></ClearCacheButton>
    </div>
    <ToastPopup></ToastPopup>
}